#! /usr/bin/env python

'''
	sortSPType.py - From a fit table generated by sdss selected spectra, generate 
					lists of files containing star with the same spectral type. Each list
					will contain the name of the spectrum in SDSS format;
					
					spec-{%04:plate}-{mjd}-{%04:fiber}

	Tiago Ribeiro - UFS 2014
'''

import sys,os
import numpy as np
import pyfits

##########################################################################################

def main(argv):
	'''
	MAIN -	Main function of the program. Gets fits filename and root for output 
			from command line. Store a list of each espectral type in separate list.
	
	Tiago Ribeiro - UFS 2014
	'''

	from optparse import OptionParser
	
	parser = OptionParser()

	parser.add_option('-f',"--filename",
                      help="Input fits filename table selection from SDSS.",type="string")
	parser.add_option('-o',"--output",
                      help="Output root filename. Will store list of spec names separated by spectral type. Names will follow the convention 'root_{sptype}.lis'.",type="string")
	parser.add_option('-v', "--verbose",action="store_true", dest="verbose", default=False,
                      help="Don't print status messages to stdout")
    
	opt,arg = parser.parse_args(argv)

	tb = pyfits.open(opt.filename)
	print '# - Read %s with %i entries'%(opt.filename,len(tb[1].data))
	
	# Get unique ids for spectral types.

	sptypes = np.unique(tb[1].data['subclass'])

	# print some information
	print '# - Found %i different spectral types.'%(len(sptypes))

	# Separate each spectral type and store lists

	iterator = np.arange(len(tb[1].data))
	
	for i in range(len(sptypes)):

		# create mask to select all entries with the same spectral type
		mask = tb[1].data['subclass'] == sptypes[i]
		spt = sptypes[i].replace( ' ' ,'').replace('/','-')
		# create list with selected spectral type
		ll = iterator[mask]
		print '# - Spectral type %s has %i entries'%(sptypes[i],len(ll))
		oname = '%s_%s.lis'%(opt.output,spt)
		sys.stdout.write('# - Writing list to %s ...'%oname)
		sys.stdout.flush()
		fp = open(oname,'a')
		for j in ll:
			entry = tb[1].data[j]
			fp.write('spec-%04i-%i-%04i.npy %s\n'%(	entry['plate'],entry['mjd'],entry['fiberID'],
													spt ))
		fp.close()
		print ' [DONE]'

	print '# - Summary:'
	print '## - Found %i different spectral types.'%(len(sptypes))
	print '## %10s %10s'%('SpType','#')
	
	for i in range(len(sptypes)):

		# create mask to select all entries with the same spectral type
		mask = tb[1].data['subclass'] == sptypes[i]

		# create list with selected spectral type
		ll = iterator[mask]
		print '## %10s %10i'%(sptypes[i],len(ll))

	print '# - Job done...'

##########################################################################################

if __name__ == '__main__':

	main(sys.argv)