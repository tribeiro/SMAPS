#!/usr/bin/env python

'''
request.py - From a list of possible targets obtained by the task "targets" from TAO. Prepare a list of requests. The idea of this task is to first select the possible targets and prepare a dummy request list. This dummy list is feed into schedule which selects actually good tagets for the night. From a cross match of both lists we then prepare an actual request list designed for our special purposes. Which is to observe > 3 standar star interchangeable with some science field.
'''

import sys,os

from src.core.tao import TAO


def main(argv):

	from optparse import OptionParser
	
	parser = OptionParser()

	parser.add_option("-t",'--targets',
                      help='''File generated by program "targets" with list of potential targets.'''
					  ,type="string")
	parser.add_option("--obsday",
                      help="Day the observations will be performed. Format is dd/mm/aaaa, also maps 'today' and 'tomorrow'",
					  type="string",default='today')
	parser.add_option("-o",'--output',
                      help='''File to be written the observation requests.'''
					  ,type="string")
	parser.add_option("--nodummy",help="Do not run in dummy mode. In this case the input file should be the output of shedule.",
						action='store_true',default=False)
				
	opt,arg = parser.parse_args(argv)
			
	#fp = open(opt.output,'w')
	
	tao = TAO()
	
	tao.setJD()
	
	#tao.selectStandardTargets(5)
	tao.selectScienceTargets()
	tao.targets()
	
	return 0
	
	#
	# Reading input files
	#

	sciFields = np.loadtxt(os.path.join(tao.PATH,tao.sciFile),dtype = 'S',delimiter=',',converters={1 : util.hex2float, 2 : util.hex2float},unpack=True)
	stdFields = np.loadtxt(os.path.join(tao.PATH,tao.stdFile),dtype = 'S',delimiter=',',converters={1 : util.hex2float, 2 : util.hex2float},unpack=True)

	JD = 2456500.5
	nightStart = _skysub.jd_sun_alt(sunMaxAlt, JD, sitelat, sitelong)
	nightEnd   = _skysub.jd_sun_alt(sunMaxAlt, JD+0.5, sitelat, sitelong)

	#
	# Process std stars
	#
	
	mask = np.zeros(len(stdFields[0])) == 0
	texp = 600./60./60./24.
		
	stdObs = util.getTargets(nightStart,nightEnd,np.array(stdFields[1],dtype='float'),np.array(stdFields[2],dtype='float'),mask,texp,sitelat,sitelong)
	
#	print stdObs
	ss =  np.zeros(len(stdFields[0])),np.array(stdFields[1],dtype='float'),np.array(stdFields[2],dtype='float')
	
	return 0

####################################################################################################################################

if __name__ == '__main__':

	main(sys.argv)